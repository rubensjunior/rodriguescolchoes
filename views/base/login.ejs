<!-- Wappler include head-page="layouts/main" fontawesome_5="cdn" bootstrap5="local" is="dmx-app" id="login" appConnect="local" components="{dmxValidator:{},dmxPreloader:{}}" -->
<dmx-preloader id="preloader1" spinner="wave" color="#0930ff"></dmx-preloader>
<meta name="ac:route" content="/f/login">

<div class="container-fluid py-4">
    <!-- Form Section -->
    <div class="row justify-content-center">
        <div class="col-12 col-md-8 col-lg-6 col-xl-4">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4 p-md-5">
                    <!-- Header -->
                    <div class="text-center mb-4">
                        <h3 class="mb-2">Entrar na Conta</h3>
                        <p class="text-muted mb-0">Digite seu CPF para acessar</p>
                    </div>

                    <form is="dmx-serverconnect-form" id="login_form" class="needs-validation" method="post" action="/api/colaborador/login" dmx-on:error="notificacoes.danger('Ocorreu um erro: '+lastError.status+lastError.message+lastError.response)" dmx-on:success="navegacao.goto('/colaborador/f/')" dmx-on:unauthorized="notificacoes.warning('Usuario não cadastrado.')">
                        <!-- CPF -->
                        <div class="form-group mb-3">
                            <label for="cpf" class="form-label">CPF *</label>
                            <input type="text" class="form-control" id="cpf" name="cpf" required data-msg-required="Por favor, digite seu CPF" pattern="\d{3}\.\d{3}\.\d{3}-\d{2}" data-msg-pattern="Digite um CPF válido (000.000.000-00)" placeholder="000.000.000-00" maxlength="14">
                        </div>

                        <!-- Lembrar de mim -->
                        <div class="form-group mb-4">
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="lembrar" name="lembrar" value="1">
                                <label class="form-check-label" for="lembrar">
                                    Lembrar de mim
                                </label>
                            </div>
                        </div>

                        <!-- Botão Entrar -->
                        <div class="d-grid mb-3">
                            <button type="submit" class="btn btn-primary">
                                <span dmx-hide="login_form.state.executing">
                                    <i class="fas fa-sign-in-alt me-2"></i>Entrar
                                </span>
                                <span dmx-show="login_form.state.executing">
                                    <span class="spinner-border spinner-border-sm me-2"></span>
                                    Entrando...
                                </span>
                            </button>
                        </div>

                        <!-- Links auxiliares -->
                        <div class="text-center">
                            <p class="mb-0">
                                Não tem uma conta?
                                <a href="/f/criar-conta" class="text-primary fw-semibold" internal="true">Criar conta</a>
                            </p>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Mensagens de Feedback -->
            <div class="mt-4">
                <!-- Sucesso -->

                <!-- Erro -->
            </div>

            <!-- Informação de Segurança -->
            <div class="mt-4">
            </div>
        </div>
    </div>
</div>
<!-- JavaScript Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3" crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.6.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.js"></script>

<script>
    // Função para formatar CPF
    function formatCPF(value) {
        // Remove todos os caracteres não numéricos
        const numbers = value.replace(/\D/g, '');
        
        // Aplica a formatação
        if (numbers.length <= 11) {
            return numbers
                .replace(/(\d{3})(\d)/, '$1.$2')
                .replace(/(\d{3})(\d)/, '$1.$2')
                .replace(/(\d{3})(\d{1,2})$/, '$1-$2');
        }
        return numbers.substring(0, 11)
            .replace(/(\d{3})(\d{3})(\d{3})(\d{2})/, '$1.$2.$3-$4');
    }

    // Validação de CPF
    function validarCPF(cpf) {
        cpf = cpf.replace(/\D/g, '');
        if (cpf.length !== 11) return false;
        
        // Verifica se todos os dígitos são iguais
        if (/^(\d)\1{10}$/.test(cpf)) return false;
        
        // Validação dos dígitos verificadores
        let sum = 0;
        for (let i = 0; i < 9; i++) {
            sum += parseInt(cpf.charAt(i)) * (10 - i);
        }
        let firstDigit = (sum * 10) % 11;
        if (firstDigit === 10) firstDigit = 0;
        
        if (firstDigit !== parseInt(cpf.charAt(9))) return false;
        
        sum = 0;
        for (let i = 0; i < 10; i++) {
            sum += parseInt(cpf.charAt(i)) * (11 - i);
        }
        let secondDigit = (sum * 10) % 11;
        if (secondDigit === 10) secondDigit = 0;
        
        return secondDigit === parseInt(cpf.charAt(10));
    }

    // Aplicar máscaras imediatamente e em múltiplos eventos
    function aplicarMascaras() {
        const cpfInput = document.getElementById('cpf');
        
        if (cpfInput && !cpfInput.hasAttribute('data-mask-applied')) {
            cpfInput.addEventListener('input', function(e) {
                e.target.value = formatCPF(e.target.value);
            });
            cpfInput.setAttribute('data-mask-applied', 'true');
        }
    }

    // Aplicar máscaras o mais cedo possível
    aplicarMascaras();
    
    // Fallback para jQuery Mask (manter compatibilidade)
    if (typeof $ !== 'undefined') {
        $(document).ready(function() {
            // Só aplica jQuery mask se as máscaras nativas não foram aplicadas
            if (!document.getElementById('cpf').hasAttribute('data-mask-applied')) {
                $('#cpf').mask('000.000.000-00');
            }
        });
    }

    // Validação antes do envio
    document.addEventListener('DOMContentLoaded', function() {
        aplicarMascaras(); // Garantir aplicação
        
        const form = document.getElementById('login_form');
        if (form) {
            form.addEventListener('submit', function(e) {
                const cpfInput = document.getElementById('cpf');
                
                // Garantir formatação antes do envio
                if (cpfInput && cpfInput.value) {
                    cpfInput.value = formatCPF(cpfInput.value);
                    
                    // Validar CPF
                    if (!validarCPF(cpfInput.value)) {
                        e.preventDefault();
                        alert('CPF inválido. Verifique os dados digitados.');
                        return false;
                    }
                }
            });
        }
        
        console.log('Página carregada');
        console.log('Formulário:', form);
        console.log('App Connect:', typeof dmx !== 'undefined' ? 'Carregado' : 'Não carregado');
        console.log('Máscaras aplicadas:', {
            cpf: document.getElementById('cpf').hasAttribute('data-mask-applied')
        });
    });
    
    // Aplicar máscaras também quando App Connect carrega
    if (typeof dmx !== 'undefined') {
        dmx.ready(aplicarMascaras);
    }
    
    // Timeout como último recurso
    setTimeout(aplicarMascaras, 100);
    setTimeout(aplicarMascaras, 500);
    setTimeout(aplicarMascaras, 1000);
</script>