<!-- Wappler include head-page="layouts/main" fontawesome_5="cdn" bootstrap5="local" is="dmx-app" id="criarconta" appConnect="local" components="{dmxValidator:{},dmxPreloader:{},dmxFormatter:{},dmxBootstrap5Alert:{},dmxBrowser:{}}" -->

<style>
    /* Camera Styles */
    .camera-container {
        position: relative;
        width: 100%;
        max-width: 400px;
        margin: 0 auto;
    }

    .camera-preview {
        width: 100%;
        height: 375px;
        border-radius: 15px;
        background: #f8f9fa;
        border: 2px dashed #dee2e6;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        position: relative;
    }

    .camera-preview video {
        width: 100%;
        height: 100%;
        object-fit: contain;
        border-radius: 13px;
        background: #000;
    }

    .camera-preview img {
        width: 100%;
        height: 100%;
        object-fit: contain;
        border-radius: 13px;
        background: #000;
    }

    .camera-preview canvas {
        object-fit: contain;
        border-radius: 13px;
    }

    .camera-preview.preview-mode {
        border: 2px solid #198754;
    }

    .camera-controls {
        position: absolute;
        bottom: 15px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: 10px;
        z-index: 10;
    }

    .camera-btn {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 18px;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    }

    .camera-btn.capture {
        background: #dc3545;
        color: white;
    }

    .camera-btn.capture:hover {
        background: #bb2d3b;
        transform: scale(1.1);
    }

    .camera-btn.retake {
        background: #6c757d;
        color: white;
    }

    .camera-btn.retake:hover {
        background: #5c636a;
    }

    .camera-btn.confirm {
        background: #198754;
        color: white;
    }

    .camera-btn.confirm:hover {
        background: #157347;
    }

    .photo-options {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }
</style>

<dmx-preloader id="carregando" color="#0930ff" spinner="wave"></dmx-preloader>
<meta name="ac:route" content="/f/criar-conta">

<!-- Controle de Step - App Connect Values -->
<dmx-value id="current_step" dmx-bind:value="1"></dmx-value>
<dmx-value id="total_steps" dmx-bind:value="4"></dmx-value>

<div class="container-fluid py-4">
    <!-- Step Indicators -->
    <div class="row justify-content-center">
        <div class="col-12 col-md-5 col-lg-5 col-xl-5">
            <div class="step-indicators d-flex justify-content-center align-items-center">
                <div class="step-item d-flex align-items-center">
                    <div class="step-circle" dmx-class:active="current_step.value >= 1" dmx-class:completed="current_step.value > 1">
                        <span dmx-show="current_step.value <= 1">1</span>
                        <i class="fas fa-check" dmx-show="current_step.value > 1"></i>
                    </div>
                    <span class="step-label d-none d-md-inline">Foto</span>
                </div>

                <div class="step-line"></div>

                <div class="step-item d-flex align-items-center">
                    <div class="step-circle" dmx-class:active="current_step.value >= 2" dmx-class:completed="current_step.value > 2">
                        <span dmx-show="current_step.value <= 2">2</span>
                        <i class="fas fa-check" dmx-show="current_step.value > 2"></i>
                    </div>
                    <span class="step-label d-none d-md-inline">Dados Pessoais</span>
                </div>

                <div class="step-line"></div>

                <div class="step-item d-flex align-items-center">
                    <div class="step-circle" dmx-class:active="current_step.value >= 3" dmx-class:completed="current_step.value > 3">
                        <span dmx-show="current_step.value <= 3">3</span>
                        <i class="fas fa-check" dmx-show="current_step.value > 3"></i>
                    </div>
                    <span class="step-label d-none d-md-inline">Dados do Veículo</span>
                </div>

                <div class="step-line"></div>

                <div class="step-item d-flex align-items-center">
                    <div class="step-circle" dmx-class:active="current_step.value >= 4">
                        <span>4</span>
                    </div>
                    <span class="step-label d-none d-md-inline">Finalizar</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Form Section -->
    <div class="row justify-content-center">
        <div class="col-12 col-md-10 col-lg-8 col-xl-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-2 p-md-2">
                    <form is="dmx-serverconnect-form" id="criar_conta_form" class="needs-validation" method="post" action="/api/colaborador/criar-conta" dmx-on:error="notificacoes.danger('Ocorreu um erro: '+criar_conta_form.lastError.status+' - '+criar_conta_form.lastError.message)" dmx-on:success="navegacao.goto('/f/login',true)">

                        <!-- STEP 1: Foto do Colaborador -->
                        <div dmx-show="current_step.value == 1" class="step-content">
                            <div class="text-center mb-4">
                                <h5 class="mb-3">Foto do Colaborador</h5>
                                <p class="text-muted">Por favor, adicione uma foto sua para identificação</p>
                            </div>

                            <div class="row justify-content-center">
                                <div class="col-12 col-md-8">
                                    <!-- Camera/Photo Preview Container -->
                                    <div class="camera-container mb-4">
                                        <div id="photoPreview" class="camera-preview">
                                            <div id="defaultIcon" class="text-center">
                                                <i class="fas fa-user fa-4x text-muted mb-3"></i>
                                                <p class="text-muted mb-0">Foto do colaborador</p>
                                            </div>

                                            <video id="cameraVideo" style="display: none;" autoplay playsinline></video>
                                            <canvas id="photoCanvas" style="display: none;"></canvas>
                                            <img id="capturedPhoto" style="display: none;" alt="Foto capturada">

                                            <div id="cameraControls" class="camera-controls" style="display: none;">
                                                <button type="button" id="captureBtn" class="camera-btn capture" title="Tirar foto">
                                                    <i class="fas fa-camera"></i>
                                                </button>
                                            </div>

                                            <div id="photoControls" class="camera-controls" style="display: none;">
                                                <button type="button" id="retakeBtn" class="camera-btn retake" title="Tirar nova foto">
                                                    <i class="fas fa-redo"></i>
                                                </button>
                                                <button type="button" id="confirmBtn" class="camera-btn confirm" title="Confirmar foto">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Photo Options -->
                                    <div class="photo-options mb-3 justify-content-center">
                                        <button type="button" id="openCameraBtn" class="btn btn-primary">
                                            <i class="fas fa-camera me-2"></i>Usar Câmera
                                        </button>
                                        <button type="button" id="selectFileBtn" class="btn btn-outline-primary">
                                            <i class="fas fa-upload me-2"></i>Selecionar Arquivo
                                        </button>
                                    </div>

                                    <!-- Hidden File Input -->
                                    <input type="file" id="foto" name="foto" accept="image/*" style="display: none;" required data-msg-required="Por favor, selecione ou tire uma foto" image-max-width="800" image-max-height="800" image-quality="85" image-type="jpeg">

                                    <!-- Hidden Canvas for Photo Data -->
                                    <canvas id="finalPhotoCanvas" style="display: none;"></canvas>

                                    <!-- Photo Guidelines -->
                                    <div class="form-text text-center">
                                        <div class="form-text">
                                            <ul class="mb-0 ps-3">
                                                <li>Use uma foto de rosto clara e recente</li>
                                                <li>Fundo neutro é recomendado</li>
                                                <li>Formato: JPG, PNG (máx. 5MB)</li>
                                                <li>Para melhor qualidade, use a câmera</li>
                                                <li>Foto será salva no formato 4:5 (ideal para perfil)</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- STEP 2: Dados Pessoais -->
                        <div dmx-show="current_step.value == 2" class="step-content">
                            <div class="row g-3">
                                <!-- Nome Completo -->
                                <div class="col-12">
                                    <div class="form-group mb-2">
                                        <label for="nome_completo" class="form-label">Nome completo *</label>
                                        <input type="text" class="form-control" id="nome_completo" name="nome_completo" required data-msg-required="Por favor, digite seu nome completo" placeholder="Ex: João Silva Santos">
                                    </div>
                                </div>

                                <!-- CPF -->
                                <div class="col-12">
                                    <div class="form-group mb-2">
                                        <label for="cpf" class="form-label">CPF *</label>
                                        <input type="text" class="form-control" id="cpf" name="cpf" required="" data-msg-required="Por favor, digite seu CPF" pattern="\d{3}\.\d{3}\.\d{3}-\d{2}" data-msg-pattern="CPF deve estar no formato 000.000.000-00" placeholder="000.000.000-00" inputmode="numeric">
                                    </div>
                                </div>

                                <!-- Data de Nascimento -->

                                <!-- Email -->
                                <div class="col-12">
                                    <div class="form-group mb-2">
                                        <label for="email" class="form-label">Email *</label>
                                        <input type="email" class="form-control" id="email" name="email" required data-msg-required="Por favor, digite seu email" data-rule-email="true" data-msg-email="Digite um email válido" placeholder="seuemail@exemplo.com">
                                    </div>
                                </div>

                                <!-- Telefone -->
                                <div class="col-12">
                                    <div class="form-group mb-2">
                                        <label for="telefone" class="form-label">Telefone *</label>
                                        <input type="tel" class="form-control" id="telefone" name="telefone" required data-msg-required="Por favor, digite seu telefone" pattern="\(\d{2}\) \d{4,5}-\d{4}" data-msg-pattern="Telefone deve estar no formato (00) 00000-0000" placeholder="(00) 00000-0000" maxlength="15" inputmode="tel">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- STEP 3: Dados do Veículo -->
                        <div dmx-show="current_step.value == 3" class="step-content">
                            <div class="row g-3">
                                <!-- Tipo do Veículo -->
                                <div class="col-12 col-md-6">
                                    <div class="form-group mb-2">
                                        <label for="tipo_veiculo" class="form-label">Tipo do veículo *</label>
                                        <select id="tipo_veiculo" name="tipo_veiculo" class="form-select" required data-msg-required="Por favor, selecione o tipo do veículo">
                                            <option value="" selected disabled>Selecione o tipo</option>
                                            <option value="carro">Carro</option>
                                            <option value="moto">Moto</option>
                                            <option value="caminhao">Caminhão</option>
                                            <option value="van">Van</option>
                                            <option value="outros">Outros</option>
                                        </select>
                                    </div>
                                </div>

                                <!-- Placa -->
                                <div class="col-12 col-md-6">
                                    <div class="form-group mb-2">
                                        <label for="placa" class="form-label">Placa do veículo *</label>
                                        <input type="text" class="form-control" id="placa" name="placa" placeholder="ABC1234" style="text-transform: uppercase;" required data-msg-required="Por favor, digite a placa do veículo">
                                    </div>
                                </div>

                                <!-- Modelo do Veículo -->
                                <div class="col-12 col-md-6">
                                    <div class="form-group mb-2">
                                        <label for="modelo_veiculo" class="form-label">Modelo</label>
                                        <input type="text" class="form-control" id="modelo_veiculo" name="modelo_veiculo" placeholder="Ex: Honda Civic, Yamaha Factor, etc.">
                                        <div class="form-text">Campo opcional</div>
                                    </div>
                                </div>

                                <!-- Ano do Veículo -->
                                <div class="col-12 col-md-6">
                                    <div class="form-group mb-2">
                                        <label for="ano_veiculo" class="form-label">Ano</label>
                                        <input type="number" class="form-control" id="ano_veiculo" name="ano_veiculo" placeholder="2020" min="1950" max="2030">
                                        <div class="form-text">Campo opcional</div>
                                    </div>
                                </div>

                                <!-- Cor do Veículo -->
                                <div class="col-12">
                                    <div class="form-group mb-2">
                                        <label for="cor_veiculo" class="form-label">Cor do veículo</label>
                                        <input type="text" class="form-control" id="cor_veiculo" name="cor_veiculo" placeholder="Ex: Branco, Prata, Azul">
                                        <div class="form-text">Campo opcional - ajuda na identificação</div>
                                    </div>
                                </div>
                            </div>

                            <!-- Debug: Verificar dados dos steps anteriores -->
                            <div class="d-none" id="debug_step3">
                                <small class="text-muted">Debug Step 3:</small>
                                <div dmx-text="'Nome: ' + nome_completo.value"></div>
                                <div dmx-text="'CPF: ' + cpf.value"></div>
                                <div dmx-text="'Email: ' + email.value"></div>
                                <div dmx-text="'Telefone: ' + telefone.value"></div>
                                <div dmx-text="'Foto: ' + foto.value"></div>
                            </div>
                        </div>

                        <!-- STEP 4: Finalizar -->
                        <div dmx-show="current_step.value == 4" class="step-content">
                            <!-- Resumo dos Dados -->
                            <div class="card bg-light border-0 mb-4">
                                <div class="card-body">
                                    <h5 class="card-title mb-3">
                                        <i class="fas fa-user me-2"></i>Resumo dos Dados
                                    </h5>

                                    <div class="row g-3">
                                        <div class="col-12 col-md-6">
                                            <strong>Nome:</strong><br>
                                            <span dmx-text="nome_completo.value || 'Não informado'"></span>
                                        </div>
                                        <div class="col-12 col-md-6">
                                            <strong>CPF:</strong><br>
                                            <span dmx-text="cpf.value || 'Não informado'"></span>
                                        </div>
                                        <div class="col-12 col-md-6">
                                            <strong>Email:</strong><br>
                                            <span dmx-text="email.value || 'Não informado'"></span>
                                        </div>
                                        <div class="col-12 col-md-6">
                                            <strong>Telefone:</strong><br>
                                            <span dmx-text="telefone.value || 'Não informado'"></span>
                                        </div>
                                        <div class="col-12 col-md-6">
                                            <strong>Veículo:</strong><br>
                                            <span dmx-text="tipo_veiculo.value || 'Não informado'"></span>
                                        </div>
                                        <div class="col-12 col-md-6">
                                            <strong>Placa:</strong><br>
                                            <span dmx-text="placa.value || 'Não informado'"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Termos de Uso -->
                            <div class="form-group mb-4">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" id="aceitar_termos" name="aceitar_termos" value="1" required data-msg-required="Você deve concordar com os termos para continuar">
                                    <label class="form-check-label" for="aceitar_termos">
                                        Li e concordo com os <a href="#" class="text-primary fw-semibold">Termos de Uso</a>
                                        e <a href="#" class="text-primary fw-semibold">Política de Privacidade</a>
                                    </label>
                                </div>
                            </div>

                            <!-- Política de Dados -->
                            <div class="alert alert-info border-0">
                                <i class="fas fa-info-circle me-2"></i>
                                <strong>Proteção de Dados:</strong> Seus dados pessoais serão utilizados apenas para
                                finalidade de entrega e comunicação relacionada aos nossos serviços, conforme nossa
                                Política de Privacidade.
                            </div>
                        </div>

                        <!-- Debug: Estado do formulário -->
                        <div class="d-none" id="debug_form">
                            <small class="text-muted">Debug Form State:</small>
                            <div dmx-text="'Form executing: ' + criar_conta_form.state.executing"></div>
                            <div dmx-text="'Form last error: ' + criar_conta_form.lastError.message"></div>
                            <div dmx-text="'Current step: ' + current_step.value"></div>
                        </div>

                        <!-- Campo hidden para garantir que os dados sejam enviados -->
                        <input type="hidden" id="step_data_check" name="step_data_check" dmx-bind:value="current_step.value">
                        <input type="hidden" id="form_timestamp" name="form_timestamp" dmx-bind:value="'now'.toDate().formatDate('yyyy-MM-dd HH:mm:ss')">

                        <!-- Navigation Buttons -->
                        <div class="form-navigation mt-4">
                            <!-- Step 1: Apenas botão "Próximo" -->
                            <div dmx-show="current_step.value == 1" class="d-grid">
                                <button type="button" class="btn btn-primary btn-lg" dmx-on:click="current_step.setValue(2)">
                                    Próximo<i class="fas fa-arrow-right ms-2"></i>
                                </button>
                            </div>

                            <!-- Step 2: Botões "Voltar" e "Próximo" -->
                            <div dmx-show="current_step.value == 2" class="row g-2 g-md-3">
                                <div class="col-6">
                                    <button type="button" class="btn btn-outline-secondary w-100" dmx-on:click="current_step.setValue(1)">
                                        <i class="fas fa-arrow-left me-1 d-none d-sm-inline"></i>
                                        <span class="d-none d-sm-inline">Voltar</span>
                                        <span class="d-sm-none"><i class="fas fa-arrow-left"></i></span>
                                    </button>
                                </div>
                                <div class="col-6">
                                    <button type="button" class="btn btn-primary w-100" dmx-class:btn-secondary="!nome_completo.value || !cpf.value || !email.value || !telefone.value" dmx-on:click="nome_completo.value && cpf.value && email.value && telefone.value ? current_step.setValue(3) : ''">
                                        <span class="d-none d-sm-inline">Próximo</span>
                                        <span class="d-sm-none">Avançar</span>
                                        <i class="fas fa-arrow-right ms-1"></i>
                                    </button>
                                </div>
                            </div>

                            <!-- Step 3: Botões "Voltar" e "Próximo" -->
                            <div dmx-show="current_step.value == 3" class="row g-2 g-md-3">
                                <div class="col-6">
                                    <button type="button" class="btn btn-outline-secondary w-100" dmx-on:click="current_step.setValue(2)">
                                        <i class="fas fa-arrow-left me-1 d-none d-sm-inline"></i>
                                        <span class="d-none d-sm-inline">Voltar</span>
                                        <span class="d-sm-none"><i class="fas fa-arrow-left"></i></span>
                                    </button>
                                </div>
                                <div class="col-6">
                                    <button type="button" class="btn btn-primary w-100" dmx-class:btn-secondary="!tipo_veiculo.value || !placa.value" dmx-on:click="tipo_veiculo.value && placa.value ? current_step.setValue(4) : ''">
                                        <span class="d-none d-sm-inline">Próximo</span>
                                        <span class="d-sm-none">Avançar</span>
                                        <i class="fas fa-arrow-right ms-1"></i>
                                    </button>
                                </div>
                            </div>

                            <!-- Step 4: Botões "Voltar" e "Criar Conta" -->
                            <div dmx-show="current_step.value == 4" class="row g-2 g-md-3">
                                <!-- Botão Voltar -->
                                <div class="col-6">
                                    <button type="button" class="btn btn-outline-secondary w-100" dmx-on:click="current_step.setValue(3)">
                                        <i class="fas fa-arrow-left me-1 d-none d-sm-inline"></i>
                                        <span class="d-none d-sm-inline">Voltar</span>
                                        <span class="d-sm-none"><i class="fas fa-arrow-left"></i></span>
                                    </button>
                                </div>
                                <!-- Botão Finalizar -->
                                <div class="col-6">
                                    <button type="submit" class="btn btn-success w-100" dmx-bind:disabled="criar_conta_form.state.executing">
                                        <span dmx-hide="criar_conta_form.state.executing">
                                            <i class="fas fa-check me-1 d-none d-sm-inline"></i>
                                            <span class="d-none d-sm-inline">Criar Conta</span>
                                            <span class="d-sm-none">Criar</span>
                                        </span>
                                        <span dmx-show="criar_conta_form.state.executing">
                                            <span class="spinner-border spinner-border-sm me-2"></span>
                                            <span class="d-none d-sm-inline">Criando...</span>
                                            <span class="d-sm-none">...</span>
                                        </span>
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!-- Link para Login -->
                        <div class="text-center mt-4">
                            <p class="mb-0">
                                Já tem uma conta?
                                <a href="/f/login" class="text-primary fw-semibold" internal="true">Faça login aqui</a>
                            </p>
                        </div>

                    </form>

                    <!-- Mensagens de Status -->
                    <div class="mt-3">
                        <!-- Sucesso -->

                        <!-- Erro -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3" crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.6.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.js"></script>

<script>
    // Máscaras de input - APENAS FORMATAÇÃO
    // Função para formatar CPF
    function formatCPF(value) {
        // Remove todos os caracteres não numéricos
        const numbers = value.replace(/\D/g, '');
        
        // Aplica a formatação
        if (numbers.length <= 11) {
            return numbers
                .replace(/(\d{3})(\d)/, '$1.$2')
                .replace(/(\d{3})(\d)/, '$1.$2')
                .replace(/(\d{3})(\d{1,2})$/, '$1-$2');
        }
        return numbers.substring(0, 11)
            .replace(/(\d{3})(\d{3})(\d{3})(\d{2})/, '$1.$2.$3-$4');
    }

    // Função para formatar telefone
    function formatTelefone(value) {
        // Remove todos os caracteres não numéricos
        const numbers = value.replace(/\D/g, '');
        
        // Aplica a formatação
        if (numbers.length <= 10) {
            // Telefone fixo (10 dígitos)
            return numbers
                .replace(/(\d{2})(\d)/, '($1) $2')
                .replace(/(\d{4})(\d)/, '$1-$2');
        } else {
            // Celular (11 dígitos)
            return numbers.substring(0, 11)
                .replace(/(\d{2})(\d{5})(\d{4})/, '($1) $2-$3');
        }
    }

    // Função para formatar data
    function formatData(value) {
        // Remove todos os caracteres não numéricos
        const numbers = value.replace(/\D/g, '');
        
        // Aplica a formatação DD/MM/AAAA
        if (numbers.length <= 8) {
            return numbers
                .replace(/(\d{2})(\d)/, '$1/$2')
                .replace(/(\d{2})(\d)/, '$1/$2');
        }
        return numbers.substring(0, 8)
            .replace(/(\d{2})(\d{2})(\d{4})/, '$1/$2/$3');
    }

    // Função para formatar placa
    function formatPlaca(value) {
        // Remove todos os caracteres que não são letras ou números
        const alphanumeric = value.replace(/[^A-Za-z0-9]/g, '').toUpperCase();
        
        // Aplica formatação baseada no comprimento
        if (alphanumeric.length <= 7) {
            // Formato antigo: ABC1234
            return alphanumeric
                .replace(/([A-Z]{3})(\d)/, '$1$2')
                .replace(/([A-Z]{3})(\d{1,4})/, '$1$2');
        } else {
            // Formato Mercosul: ABC1D23
            return alphanumeric.substring(0, 7)
                .replace(/([A-Z]{3})(\d{1})([A-Z]{1})(\d{2})/, '$1$2$3$4');
        }
    }

    // Aplicar máscaras imediatamente e em múltiplos eventos
    function aplicarMascaras() {
        const cpfInput = document.getElementById('cpf');
        const telefoneInput = document.getElementById('telefone');
        const placaInput = document.getElementById('placa');
        
        if (cpfInput && !cpfInput.hasAttribute('data-mask-applied')) {
            cpfInput.addEventListener('input', function(e) {
                e.target.value = formatCPF(e.target.value);
            });
            cpfInput.setAttribute('data-mask-applied', 'true');
        }
        
        if (telefoneInput && !telefoneInput.hasAttribute('data-mask-applied')) {
            telefoneInput.addEventListener('input', function(e) {
                e.target.value = formatTelefone(e.target.value);
            });
            telefoneInput.setAttribute('data-mask-applied', 'true');
        }
        
        
        if (placaInput && !placaInput.hasAttribute('data-mask-applied')) {
            placaInput.addEventListener('input', function(e) {
                e.target.value = formatPlaca(e.target.value);
            });
            placaInput.setAttribute('data-mask-applied', 'true');
        }
    }

    // Aplicar máscaras o mais cedo possível
    aplicarMascaras();
    
    // Fallback para jQuery Mask (manter compatibilidade)
    if (typeof $ !== 'undefined') {
        $(document).ready(function() {
            // Só aplica jQuery mask se as máscaras nativas não foram aplicadas
            if (!document.getElementById('cpf').hasAttribute('data-mask-applied')) {
                $('#cpf').mask('000.000.000-00');
            }
            if (!document.getElementById('telefone').hasAttribute('data-mask-applied')) {
                $('#telefone').mask('(00) 00000-0000');
            }
            if (!document.getElementById('placa').hasAttribute('data-mask-applied')) {
                $('#placa').mask('AAA0000', {'translation': {'A': {pattern: /[A-Za-z]/}, '0': {pattern: /[0-9]/}}});
            }
        });
    }

    // Log para debug
    document.addEventListener('DOMContentLoaded', function() {
        aplicarMascaras(); // Garantir aplicação
        
        // Verificar se App Connect está carregado
        let checkAppConnect = setInterval(function() {
            if (typeof dmx !== 'undefined' && dmx.app) {
                console.log('App Connect carregado com sucesso');
                clearInterval(checkAppConnect);
            }
        }, 100);
        setTimeout(() => clearInterval(checkAppConnect), 5000);
        
        console.log('Página carregada');
        console.log('Formulário:', document.getElementById('criar_conta_form'));
        console.log('App Connect:', typeof dmx !== 'undefined' ? 'Carregado' : 'Não carregado');
        console.log('Máscaras aplicadas:', {
            cpf: document.getElementById('cpf').hasAttribute('data-mask-applied'),
            telefone: document.getElementById('telefone').hasAttribute('data-mask-applied'),
            placa: document.getElementById('placa').hasAttribute('data-mask-applied')
        });
    });
    
    // Aplicar máscaras também quando App Connect carrega
    if (typeof dmx !== 'undefined') {
        dmx.ready(aplicarMascaras);
    }
    
    // Timeout como último recurso
    setTimeout(aplicarMascaras, 100);
    setTimeout(aplicarMascaras, 500);
    setTimeout(aplicarMascaras, 1000);

    // Inicialização mais robusta do App Connect
    document.addEventListener('DOMContentLoaded', function() {
        // Aguardar carregamento completo
        setTimeout(function() {
            if (typeof dmx !== 'undefined' && dmx.app) {
                dmx.ready(function() {
                    console.log('App Connect carregado. current_step inicial:', dmx.parse('current_step.value'));
                });
            }
        }, 500);
    });

    // Camera Functionality
    let stream = null;
    let photoTaken = false;

    const video = document.getElementById('cameraVideo');
    const canvas = document.getElementById('photoCanvas');
    const finalCanvas = document.getElementById('finalPhotoCanvas');
    const capturedPhoto = document.getElementById('capturedPhoto');
    const photoPreview = document.getElementById('photoPreview');
    const defaultIcon = document.getElementById('defaultIcon');
    const fileInput = document.getElementById('foto');
    
    const openCameraBtn = document.getElementById('openCameraBtn');
    const selectFileBtn = document.getElementById('selectFileBtn');
    const captureBtn = document.getElementById('captureBtn');
    const retakeBtn = document.getElementById('retakeBtn');
    const confirmBtn = document.getElementById('confirmBtn');
    
    const cameraControls = document.getElementById('cameraControls');
    const photoControls = document.getElementById('photoControls');

    // Open Camera
    openCameraBtn.addEventListener('click', async function() {
        try {
            stream = await navigator.mediaDevices.getUserMedia({ 
                video: { 
                    facingMode: 'user',
                    width: { ideal: 640 },
                    height: { ideal: 480 }
                } 
            });
            
            video.srcObject = stream;
            
            // Show camera interface
            defaultIcon.style.display = 'none';
            video.style.display = 'block';
            cameraControls.style.display = 'flex';
            
            // Hide buttons
            openCameraBtn.style.display = 'none';
            selectFileBtn.style.display = 'none';
            
        } catch (err) {
            console.error('Erro ao acessar a câmera:', err);
            alert('Não foi possível acessar a câmera. Verifique as permissões ou use a opção de arquivo.');
        }
    });

    // Select File
    selectFileBtn.addEventListener('click', function() {
        fileInput.click();
    });

    // Handle file selection
    fileInput.addEventListener('change', function(e) {
        const file = e.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(event) {
                capturedPhoto.src = event.target.result;
                capturedPhoto.style.display = 'block';
                defaultIcon.style.display = 'none';
                photoPreview.classList.add('preview-mode');
                photoTaken = true;
                
                // Show reset option
                showPhotoControls();
            };
            reader.readAsDataURL(file);
        }
    });

    // Capture Photo
    captureBtn.addEventListener('click', function() {
        const context = canvas.getContext('2d');
        
        // Manter as mesmas dimensões do container de preview
        const previewRect = photoPreview.getBoundingClientRect();
        
        // Formato 4:5 para foto de perfil (320x400 para boa qualidade)
        canvas.width = 320;
        canvas.height = 400;
        
        // Preencher fundo preto
        context.fillStyle = '#000';
        context.fillRect(0, 0, canvas.width, canvas.height);
        
        // Calcular como centralizar o vídeo no formato 4:5
        const videoAspect = video.videoWidth / video.videoHeight;
        const targetAspect = 4 / 5; // 0.8
        
        let drawWidth, drawHeight, offsetX, offsetY;
        
        if (videoAspect > targetAspect) {
            // Vídeo mais largo que 4:5 - ajustar pela altura
            drawHeight = canvas.height;
            drawWidth = drawHeight * videoAspect;
            offsetX = (canvas.width - drawWidth) / 2;
            offsetY = 0;
        } else {
            // Vídeo mais alto ou igual a 4:5 - ajustar pela largura
            drawWidth = canvas.width;
            drawHeight = drawWidth / videoAspect;
            offsetX = 0;
            offsetY = (canvas.height - drawHeight) / 2;
        }
        
        // Desenhar o vídeo centralizado no formato 4:5
        context.drawImage(video, offsetX, offsetY, drawWidth, drawHeight);
        
        // Convert to image
        const dataURL = canvas.toDataURL('image/jpeg', 0.8);
        capturedPhoto.src = dataURL;
        
        // Hide video, show photo
        video.style.display = 'none';
        capturedPhoto.style.display = 'block';
        photoPreview.classList.add('preview-mode');
        
        // Show photo controls
        cameraControls.style.display = 'none';
        photoControls.style.display = 'flex';
        
        photoTaken = true;
    });

    // Retake Photo
    retakeBtn.addEventListener('click', function() {
        capturedPhoto.style.display = 'none';
        video.style.display = 'block';
        photoPreview.classList.remove('preview-mode');
        
        photoControls.style.display = 'none';
        cameraControls.style.display = 'flex';
        
        photoTaken = false;
    });

    // Confirm Photo
    confirmBtn.addEventListener('click', function() {
        // Convert photo to file and set it to the file input
        canvas.toBlob(function(blob) {
            const file = new File([blob], 'camera-photo.jpg', { type: 'image/jpeg' });
            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(file);
            fileInput.files = dataTransfer.files;
            
            // Trigger change event to ensure App Connect recognizes the file
            const event = new Event('change', { bubbles: true });
            fileInput.dispatchEvent(event);
            
            // Stop camera
            stopCamera();
            
            // Show reset options
            showPhotoControls();
            
            console.log('Foto confirmada e arquivo processado:', fileInput.files[0]);
        }, 'image/jpeg', 0.8);
    });

    function stopCamera() {
        if (stream) {
            stream.getTracks().forEach(track => track.stop());
            stream = null;
        }
        video.style.display = 'none';
        cameraControls.style.display = 'none';
    }

    function showPhotoControls() {
        photoControls.style.display = 'none';
        openCameraBtn.style.display = 'inline-block';
        selectFileBtn.style.display = 'inline-block';
        openCameraBtn.innerHTML = '<i class="fas fa-camera me-2"></i>Nova Foto';
        selectFileBtn.innerHTML = '<i class="fas fa-upload me-2"></i>Outro Arquivo';
    }

    // Clean up when leaving the page
    window.addEventListener('beforeunload', function() {
        stopCamera();
    });

    // Validação dos steps
    
    // Debug melhorado para servidor
    function debugServidor() {
        console.log('=== DEBUG SERVIDOR ===');
        console.log('UserAgent:', navigator.userAgent);
        console.log('URL atual:', window.location.href);
        console.log('App Connect disponível:', typeof dmx !== 'undefined');
        
        if (typeof dmx !== 'undefined') {
            setTimeout(function() {
                try {
                    console.log('Current Step:', dmx.parse('current_step.value'));
                    console.log('Form State:', {
                        executing: dmx.parse('criar_conta_form.state.executing'),
                        hasError: dmx.parse('criar_conta_form.lastError') ? true : false
                    });
                } catch (e) {
                    console.error('Erro no debug:', e);
                }
            }, 2000);
        }
    }
    
    // Executar debug
    document.addEventListener('DOMContentLoaded', debugServidor);
    setTimeout(debugServidor, 3000);

</script>